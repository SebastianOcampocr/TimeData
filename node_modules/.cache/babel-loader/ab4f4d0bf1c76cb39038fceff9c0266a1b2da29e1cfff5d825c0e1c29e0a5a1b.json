{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebas\\\\OneDrive\\\\Documents\\\\expokey\\\\TimeData\\\\timedata-app\\\\src\\\\SubirReto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; // Importa Link desde react-router-dom\nimport './UserMenu.css'; // Importa los estilos específicos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserMenu({\n  onLogout\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [profilePicture, setProfilePicture] = useState('');\n  useEffect(() => {\n    const storedUsername = localStorage.getItem('username');\n    const storedProfilePicture = localStorage.getItem('profilePicture'); // Supongamos que también almacenas la foto en el localStorage\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n    if (storedProfilePicture) {\n      setProfilePicture(storedProfilePicture);\n    }\n  }, []);\n  const toggleMenu = () => setIsOpen(!isOpen);\n\n  // Función para obtener las iniciales del nombre de usuario\n  const getInitials = name => {\n    if (!name) return '';\n    const names = name.split(' ');\n    return names.map(n => n[0].toUpperCase()).join('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMenu,\n      className: \"user-menu-btn\",\n      children: [profilePicture ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profilePicture,\n        alt: \"Foto de perfil\",\n        className: \"user-photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initials\",\n        children: getInitials(username)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: username || 'Usuario'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/cuenta\",\n        className: \"dropdown-item\",\n        children: \"Cuenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown-item logout-btn\",\n        onClick: onLogout,\n        children: \"Cerrar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(UserMenu, \"NreQxls9gG/QOVtjN7U6Derwtj4=\");\n_c = UserMenu;\nexport default UserMenu;\nvar _c;\n$RefreshReg$(_c, \"UserMenu\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","UserMenu","onLogout","_s","isOpen","setIsOpen","username","setUsername","profilePicture","setProfilePicture","storedUsername","localStorage","getItem","storedProfilePicture","toggleMenu","getInitials","name","names","split","map","n","toUpperCase","join","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/sebas/OneDrive/Documents/expokey/TimeData/timedata-app/src/SubirReto.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'; // Importa Link desde react-router-dom\r\nimport './UserMenu.css'; // Importa los estilos específicos\r\n\r\nfunction UserMenu({ onLogout }) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [profilePicture, setProfilePicture] = useState('');\r\n\r\n    useEffect(() => {\r\n        const storedUsername = localStorage.getItem('username');\r\n        const storedProfilePicture = localStorage.getItem('profilePicture'); // Supongamos que también almacenas la foto en el localStorage\r\n        if (storedUsername) {\r\n            setUsername(storedUsername);\r\n        }\r\n        if (storedProfilePicture) {\r\n            setProfilePicture(storedProfilePicture);\r\n        }\r\n    }, []);\r\n\r\n    const toggleMenu = () => setIsOpen(!isOpen);\r\n\r\n    // Función para obtener las iniciales del nombre de usuario\r\n    const getInitials = (name) => {\r\n        if (!name) return '';\r\n        const names = name.split(' ');\r\n        return names.map(n => n[0].toUpperCase()).join('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"user-menu\">\r\n            <button onClick={toggleMenu} className=\"user-menu-btn\">\r\n                {profilePicture ? (\r\n                    <img src={profilePicture} alt=\"Foto de perfil\" className=\"user-photo\" />\r\n                ) : (\r\n                    <div className=\"initials\">{getInitials(username)}</div>\r\n                )}\r\n                <span>{username || 'Usuario'}</span>\r\n            </button>\r\n            {isOpen && (\r\n                <div className=\"dropdown-menu\">\r\n                    <Link to=\"/cuenta\" className=\"dropdown-item\">Cuenta</Link>\r\n                    <button className=\"dropdown-item logout-btn\" onClick={onLogout}>Cerrar sesión</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserMenu;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}